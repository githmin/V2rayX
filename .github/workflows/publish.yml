name: Build & Release

on:
  workflow_dispatch:
  label:
    types: [created]
    branches:
      - master
  push:
    branches:
      - development
    paths:
      - 'main/**'
      - 'renderer/**'
      - 'bin/**'
      - 'electron-builder.json'

jobs:
  publish:
    name: Release Windows/Linux App
    runs-on: ${{ matrix.os }} #流水线会跑在哪些操作系统中

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-13] # 流水线将分别触发在 macos/ubuntu/windows 系统中

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.14.0

      - name: Install Yarn
        run: npm i -g yarn@latest

      # - name: Install Snapcraft (ubuntu)
      #   if: matrix.os == 'ubuntu-20.04'
      #   run: sudo apt install snapd snap snapcraft && sudo snap install multipass && sudo snap install review-tools

      - name: Install Dependencies (ubuntu)
        if: matrix.os == 'ubuntu-20.04'
        run: sudo apt update && sudo apt upgrade && sudo apt install build-essential

      - name: Cache Desktop node_modules
        id: cache-desktop-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock', 'patches/**') }}

      - name: Install Dependencies
        if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build App
        env:
          CI: false
        run: yarn electron:build

      - name: Publish Dmg/Zip (mac)
        if: matrix.os == 'macos-13'
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          CI: false
        # run: yarn publish:mac

      - name: Publish Deb/AppImage (ubuntu)
        if: matrix.os == 'ubuntu-20.04'
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          CI: false
        # run: yarn publish:linux

      - name: Publish Zip/Exe (windows)
        if: matrix.os == 'windows-latest'
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          CI: false
        # run: yarn publish:win
